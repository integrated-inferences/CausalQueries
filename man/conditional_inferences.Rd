% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_tracing_strategies.R
\name{conditional_inferences}
\alias{conditional_inferences}
\title{Conditional inferences}
\usage{
conditional_inferences(model, query, parameters = NULL, given = NULL)
}
\arguments{
\item{model}{A  model}

\item{query}{A query as a character string, for example 'Y[X=1]>Y[X=0]'}

\item{parameters}{a parameter vector}

\item{given}{A conditioning set as a character string that evaluates to a logical, for example 'Y==1'}
}
\description{
Calculate estimands condition on observed data (currently for single case process tracing) together with data realization probabilities
Realization probabilities are the probability of the observed data given data is sought onb observed variables
}
\examples{
model <- make_model("X->Y")
model <- set_parameters(model, type = "flat")
conditional_inferences(model, query = "Y[X=1]>Y[X=0]")

# Example of posteriors given monotonic X -> M -> Y model
library(dplyr)
model <- make_model("X-> M -> Y")  \%>\%
  set_restrictions(node_restrict = list(M = "10", Y = "10")) \%>\%
  set_parameters(type = "flat")
conditional_inferences(model, query = "Y[X=1]>Y[X=0]", given = "Y==1")

# Running example
model <- make_model("S -> C -> Y <- R <- X; X -> C -> R") \%>\%
   set_restrictions(node_restrict = list(C = "C1110", R = "R0001", Y = "Y0001"), action = "keep")
conditional_inferences(model, query = list(COE = "(Y[S=0] > Y[S=1])"), given = "Y==1 & S==0")
}
