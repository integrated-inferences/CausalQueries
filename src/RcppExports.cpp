// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// get_type_prob_c
std::vector<double> get_type_prob_c(arma::mat P, std::vector<double> parameters);
RcppExport SEXP _CausalQueries_get_type_prob_c(SEXP PSEXP, SEXP parametersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type P(PSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type parameters(parametersSEXP);
    rcpp_result_gen = Rcpp::wrap(get_type_prob_c(P, parameters));
    return rcpp_result_gen;
END_RCPP
}
// get_type_prob_multiple_c
arma::mat get_type_prob_multiple_c(arma::mat params, arma::mat P);
RcppExport SEXP _CausalQueries_get_type_prob_multiple_c(SEXP paramsSEXP, SEXP PSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P(PSEXP);
    rcpp_result_gen = Rcpp::wrap(get_type_prob_multiple_c(params, P));
    return rcpp_result_gen;
END_RCPP
}
// realise_outcome_c
DataFrame realise_outcome_c(DataFrame d, std::vector<std::string> endogenous_nodes, List parents_list, List nodal_types_collapsed, List nodal_types);
RcppExport SEXP _CausalQueries_realise_outcome_c(SEXP dSEXP, SEXP endogenous_nodesSEXP, SEXP parents_listSEXP, SEXP nodal_types_collapsedSEXP, SEXP nodal_typesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type d(dSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type endogenous_nodes(endogenous_nodesSEXP);
    Rcpp::traits::input_parameter< List >::type parents_list(parents_listSEXP);
    Rcpp::traits::input_parameter< List >::type nodal_types_collapsed(nodal_types_collapsedSEXP);
    Rcpp::traits::input_parameter< List >::type nodal_types(nodal_typesSEXP);
    rcpp_result_gen = Rcpp::wrap(realise_outcome_c(d, endogenous_nodes, parents_list, nodal_types_collapsed, nodal_types));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_stan_fit4simplexes_mod();

static const R_CallMethodDef CallEntries[] = {
    {"_CausalQueries_get_type_prob_c", (DL_FUNC) &_CausalQueries_get_type_prob_c, 2},
    {"_CausalQueries_get_type_prob_multiple_c", (DL_FUNC) &_CausalQueries_get_type_prob_multiple_c, 2},
    {"_CausalQueries_realise_outcome_c", (DL_FUNC) &_CausalQueries_realise_outcome_c, 5},
    {"_rcpp_module_boot_stan_fit4simplexes_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4simplexes_mod, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_CausalQueries(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
